---

# Notes:
# Toggle fullscreen => Ctrl+Alt+k
# Tile window left, right => Ctrl+Alt+(hl)
# Move window to upper workspace (vim-like) => Shift+Ctrl+Alt+(hjkl)
# Change space => Shift+Ctrl+(hl)

- name: XFCE desktop environment
  block:
    - name: Install xcape
      ansible.builtin.package:
        name: xcape
        state: present
      become: true

    - name: Soft link xfce4-keyboard-shortcuts.xml
      ansible.builtin.file:
        src: "{{ playbook_dir }}/files/xfce4-keyboard-shortcuts.xml"
        dest: "{{ ansible_env.HOME }}/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-keyboard-shortcuts.xml"
        force: true
        state: link

    - name: Soft link .xprofile
      ansible.builtin.file:
        src: "{{ playbook_dir }}/files/.xprofile"
        dest: "{{ ansible_env.HOME }}/.xprofile"
        force: true
        state: link
      notify: reload xprofile conf
  when: desktop_environment is not undefined and desktop_environment == 'xfce'

- name: Key bindings MacOS
  block:
    - name: Install Karabiner
      ansible.builtin.package:
        name: "karabiner-elements"
        state: present
      register: result
      failed_when: '"already installed" not in result.msg and result.msg != ""'

    - name: Soft link complex modification
      ansible.builtin.file:
        src: "{{ playbook_dir }}/files/custom-capslock.json"
        dest: "{{ ansible_env.HOME }}/.config/karabiner/assets/complex_modifications/custom-capslock.json"
        force: true
        state: link

    - name: Fail when wrong hw_keyboard
      ansible.builtin.fail:
        msg: hw_keyboard not 'ansi' or 'iso'
      when: |
        hw_keyboard is undefined or
        not (hw_keyboard == 'ansi' or hw_keyboard == 'iso')

    - name: Soft link complex modification
      ansible.builtin.file:
        src: "{{ playbook_dir }}/files/karabiner-{{ hw_keyboard }}.json"
        dest: "{{ ansible_env.HOME }}/.config/karabiner/karabiner.json"
        force: true
        state: link

    - name: Create ~/Library/Application\ Support/Rectangle dir
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/Library/Application\ Support/Rectangle"
        state: directory
        mode: '0755'

    - name: Copy RectangleConfig.json to ~/Library/Application\ Support/Rectangle/RectangleConfig.json
      ansible.builtin.copy:
        src: RectangleConfig.json
        dest: "{{ ansible_env.HOME }}/Library/Application\ Support/Rectangle/RectangleConfig.json"
        mode: '0644'
      become: true

    - name: Install Rectangle
      ansible.builtin.package:
        name: "rectangle"
        state: present
      register: result
      failed_when: '"already installed" not in result.msg and result.msg != ""'
  when: ansible_os_family == 'Darwin'
