---

- name: Install neovim
  ansible.builtin.package:
    name: neovim
    state: present
  become: true

- name: Install fzf
  ansible.builtin.package:
    name: fzf
    state: present
  become: true

- name: Special repo for nodejs on Debian
  ansible.builtin.shell:
    cmd: >
      curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
  when: ansible_os_family == "Debian"

- name: Install nodejs
  ansible.builtin.package:
    name: nodejs
    state: present
  become: true

- name: Install vim-plug
  ansible.builtin.shell:
    cmd: >
      sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

- name: "Ensure {{ ansible_env.HOME }}/nvim exists"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/nvim"
    state: directory

- name: Soft link files
  ansible.builtin.file:
    src: "{{ playbook_dir }}/files/{{ item }}"
    dest: "{{ ansible_env.HOME }}/.config/nvim/{{ item }}"
    force: true
    state: link
  loop:
    - coc-settings.json
    - init.vim

- name: Soft link from old vimrc to new
  ansible.builtin.file:
    src: "{{ ansible_env.HOME }}/.config/nvim/init.vim"
    dest: "{{ ansible_env.HOME }}/.vimrc"
    force: true
    state: link

- name: Ensure ftdetect dir exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/nvim/ftdetect"
    state: directory

- name: Get proto vim filetype
  ansible.builtin.uri:
    url: https://raw.githubusercontent.com/protocolbuffers/protobuf/master/editors/proto.vim
    return_content: true
  register: resp

- name: "Copy content into {{ ansible_env.HOME }}/.config/nvim/ftdetect/proto.vim"
  ansible.builtin.copy:
    content: "{{ resp.content }}"
    dest: "{{ ansible_env.HOME }}/.config/nvim/ftdetect/proto.vim"

- name: Install plugins
  ansible.builtin.command:
    cmd: nvim +'PlugInstall --sync' +qa
